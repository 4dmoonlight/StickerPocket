//
//  MessagesViewController.m
//  MsgStickerPocket
//
//  Created by Rui Hou on 01/11/2017.
//  Copyright © 2017 Rui Hou. All rights reserved.
//

#import "MessagesViewController.h"
#import "HRMsgStickerCollectionViewCell.h"
#import "SDImageCache+HRExtension.h"
#import "FMDatabaseQueue+HRExtension.h"
@interface MessagesViewController () <UICollectionViewDelegateFlowLayout,UICollectionViewDataSource,UICollectionViewDelegate>
@property (weak, nonatomic) IBOutlet UICollectionView *collectionView;
@property (nonatomic, strong) NSMutableArray *dataArray;
@property (nonatomic, strong) MSSession *session;
@end

@implementation MessagesViewController

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view.
    _session = [[MSSession alloc] init];
    [FMDatabaseQueue createStickerSql];
    [self fetchData];
    DebugLog(@"hello");
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

- (void)fetchData {
    HRWeakSelf;
    [FMDatabaseQueue selectAllModelWithCompletion:^(NSArray *data) {
        HRStrongSelf;
        strongSelf.dataArray = [data mutableCopy];
        [strongSelf.collectionView reloadData];
    }];
}

#pragma mark - Conversation Handling

-(void)didBecomeActiveWithConversation:(MSConversation *)conversation {
    // Called when the extension is about to move from the inactive to active state.
    // This will happen when the extension is about to present UI.
    
    // Use this method to configure the extension and restore previously stored state.
    DebugLog(@"hello");
}

-(void)willResignActiveWithConversation:(MSConversation *)conversation {
    // Called when the extension is about to move from the active to inactive state.
    // This will happen when the user dissmises the extension, changes to a different
    // conversation or quits Messages.
    
    // Use this method to release shared resources, save user data, invalidate timers,
    // and store enough state information to restore your extension to its current state
    // in case it is terminated later.
}

-(void)didReceiveMessage:(MSMessage *)message conversation:(MSConversation *)conversation {
    // Called when a message arrives that was generated by another instance of this
    // extension on a remote device.
    
    // Use this method to trigger UI updates in response to the message.
}

-(void)didStartSendingMessage:(MSMessage *)message conversation:(MSConversation *)conversation {
    // Called when the user taps the send button.
}

-(void)didCancelSendingMessage:(MSMessage *)message conversation:(MSConversation *)conversation {
    // Called when the user deletes the message without sending it.
    
    // Use this to clean up state related to the deleted message.
}

-(void)willTransitionToPresentationStyle:(MSMessagesAppPresentationStyle)presentationStyle {
    // Called before the extension transitions to a new presentation style.
    
    // Use this method to prepare for the change in presentation style.
}

-(void)didTransitionToPresentationStyle:(MSMessagesAppPresentationStyle)presentationStyle {
    // Called after the extension transitions to a new presentation style.
    
    // Use this method to finalize any behaviors associated with the change in presentation style.
}

- (nonnull __kindof UICollectionViewCell *)collectionView:(nonnull UICollectionView *)collectionView cellForItemAtIndexPath:(nonnull NSIndexPath *)indexPath {
    HRMsgStickerCollectionViewCell *cell = [collectionView dequeueReusableCellWithReuseIdentifier:@"HRMsgStickerCollectionViewCell" forIndexPath:indexPath];
    HRStickerModel *model = self.dataArray[indexPath.item];
    cell.imageView.image = [[SDImageCache shareGroupInstance] imageFromCacheForKey:model.url];
    return cell;
}

- (void)collectionView:(UICollectionView *)collectionView didSelectItemAtIndexPath:(NSIndexPath *)indexPath {
    MSMessage * message = [[MSMessage alloc]initWithSession:_session];
//    message.URL = [NSURL URLWithString:@"http://www.baidu.com"];
//    message.accessibilityLabel = @"message";
//    message.summaryText = @"message";
    MSMessageTemplateLayout * layout = [[MSMessageTemplateLayout alloc]init];
//    layout.caption = @"caption";
//    layout.subcaption = @"subcaption";
//    layout.trailingCaption = @"trailing";
//    layout.trailingSubcaption =@"subtrailing";
    HRStickerModel *model = self.dataArray[indexPath.item];
    layout.image = [[SDImageCache shareGroupInstance] imageFromCacheForKey:model.url];
//    NSURL *url = [[NSURL alloc] initFileURLWithPath:[[NSBundle mainBundle] pathForResource:@"ic_common_wanglibank" ofType:@"png"]];
//    layout.mediaFileURL = url;
//    layout.imageTitle = @"易黄金";
//    layout.imageSubtitle = @"易黄金";
    
    message.layout = layout;
    
    [self.activeConversation insertMessage:message completionHandler:^(NSError *error){
        if (error != nil) {
            DebugLog(@"%@",error.localizedDescription);
        }
    }];
}

- (NSInteger)collectionView:(nonnull UICollectionView *)collectionView numberOfItemsInSection:(NSInteger)section {
    return self.dataArray.count;
}

- (NSMutableArray *)dataArray {
    if (!_dataArray) {
        _dataArray = [NSMutableArray new];
    }
    return _dataArray;
}
@end
